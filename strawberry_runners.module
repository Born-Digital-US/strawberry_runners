<?php
/**
 * @file
 * Contains strawberryfield.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\webform\WebformSubmissionForm;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\file\Entity\File;
use Drupal\node\NodeInterface;


/**
 * Implements hook_node_access_records_alter().
 *
 * Marks the Flavor Data Sources as changed for indexes that use the "Content
 * access" processor.
 */
function strawberry_runners_node_access_records_alter(array &$grants, NodeInterface $node) {
  /** @var \Drupal\search_api\IndexInterface $index */
  return;
  foreach (Index::loadMultiple() as $index) {
    if (!$index->hasValidTracker() || !$index->status()) {
      continue;
    }
    if (!$index->isValidProcessor('content_access')) {
      continue;
    }

    foreach ($index->getDatasources() as $datasource_id => $datasource) {
      switch ($datasource->getEntityTypeId()) {
        case 'node':
          // Don't index the node if search_api_skip_tracking is set on it.
          if ($node->search_api_skip_tracking) {
            continue 2;
          }
          $item_id = $datasource->getItemId($node->getTypedData());
          if ($item_id !== NULL) {
            $index->trackItemsUpdated($datasource_id, [$item_id]);
          }
          break;

        case 'comment':
          if (!isset($comments)) {
            $entity_query = \Drupal::entityQuery('comment');
            $entity_query->condition('entity_id', (int) $node->id());
            $entity_query->condition('entity_type', 'node');
            $comment_ids = $entity_query->execute();
            /** @var \Drupal\comment\CommentInterface[] $comments */
            $comments = Comment::loadMultiple($comment_ids);
          }
          $item_ids = [];
          foreach ($comments as $comment) {
            $item_id = $datasource->getItemId($comment->getTypedData());
            if ($item_id !== NULL) {
              $item_ids[] = $item_id;
            }
          }
          if ($item_ids) {
            $index->trackItemsUpdated($datasource_id, $item_ids);
          }
          break;
      }
    }
  }
}